name: tests
on: [ push, pull_request ]
jobs:
  build:
    name: "Test django ${{ matrix.django }} with Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10" ]
        django: [ "3.2", "4.0" ]
    services:
      disque:
        image: efrecon/disque:1.0-rc1
        ports:
          - '7711:7711/tcp'
      mongodb:
        image: mongo
        ports:
          - 27017:27017
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a health check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    steps:
        - uses: actions/checkout@v3
        - name: Install poetry
          run: pipx install poetry
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v3
          with:
            python-version: ${{ matrix.python-version }}
            cache: "poetry"
        - name: Install dependencies with Django ${{ matrix.django }}
          run: |
            poetry add "django==${{ matrix.django }}"
            poetry install -E testing
        - name: Run Tests
          run: |
            poetry run pytest --cov=./django_q --cov-report=xml
